apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik-gateway
  namespace: traefik-gateway
  labels:
    app: traefik-gateway
spec:
  replicas: 3  # Increased for high availability
  selector:
    matchLabels:
      app: traefik-gateway
  template:
    metadata:
      labels:
        app: traefik-gateway
    spec:
      containers:
      - name: traefik
        image: traefik:v3.0
        ports:
        - containerPort: 80
          name: web
        - containerPort: 443
          name: websecure
        - containerPort: 8080
          name: dashboard
        args:
        - --api.dashboard=true
        - --api.insecure=true
        - --providers.kubernetesingress=true
        - --entrypoints.web.address=:80
        - --entrypoints.websecure.address=:443
        - --certificatesresolvers.letsencrypt.acme.email=admin@apifincheck.husanenglish.online
        - --certificatesresolvers.letsencrypt.acme.storage=/data/acme.json
        - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
        - --entrypoints.web.http.redirections.entrypoint.to=websecure
        - --entrypoints.web.http.redirections.entrypoint.scheme=https
        # Load Balancer Configuration
        - --services.loadbalancer.healthcheck.path=/health
        - --services.loadbalancer.healthcheck.interval=10s
        - --services.loadbalancer.healthcheck.timeout=5s
        - --services.loadbalancer.healthcheck.retries=3
        # Circuit Breaker
        - --http.middlewares.circuitbreaker.circuitbreaker.expression=NetworkErrorRatio() > 0.3
        # Rate Limiting
        - --http.middlewares.ratelimit.ratelimit.burst=200
        - --http.middlewares.ratelimit.ratelimit.average=100
        # Security Headers
        - --http.middlewares.security-headers.headers.forcestsheader=true
        - --http.middlewares.security-headers.headers.framedeny=true
        - --http.middlewares.security-headers.headers.contenttypenosniff=true
        - --http.middlewares.security-headers.headers.browserxssfilter=true
        volumeMounts:
        - name: data
          mountPath: /data
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 10
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: traefik-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-gateway
  namespace: traefik-gateway
  labels:
    app: traefik-gateway
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  ports:
  - name: web
    port: 80
    targetPort: 80
    protocol: TCP
  - name: websecure
    port: 443
    targetPort: 443
    protocol: TCP
  - name: dashboard
    port: 8888
    targetPort: 8080
    protocol: TCP
  selector:
    app: traefik-gateway
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: traefik-data-pvc
  namespace: traefik-gateway
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: gp2
